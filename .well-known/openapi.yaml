openapi: 3.0.2
info:
  title: Vector Graph Memory Plugin API
  description: An API for querying and filtering documents based on natural language queries and metadata
  version: 1.0.0
servers:
  - url: https://your-app-url.com
paths:
  /upsert:
    post:
      summary: Upsert
      description: Update or Insert chat information into the vector database. Accepts an array of documents with text and metadata.  When updating, provide the document "id" item as well as the "text" and "metadata" keys.
      operationId: upsert_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpsertRequest"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpsertResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
      security:
        - HTTPBearer: []
  /query:
    post:
      summary: Query
      description: Accepts search query objects array each with query and optional filter. Break down complex questions into sub-questions. Refine results by criteria, e.g. time / source, don't do this often. Split queries if ResponseTooLargeError occurs.
      operationId: query_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryRequest"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueryResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
      security:
        - HTTPBearer: []
  /delete:
    post:
      summary: Delete
      description: Delete documents based on IDs or filter. If delete_all is true, all documents will be deleted.
      operationId: delete_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRequest"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
      security:
        - HTTPBearer: []
  /add_reference:
    post:
      summary: Add Reference
      description: Adds a reference between two documents.
      operationId: add_reference_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddReferenceRequest"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddReferenceResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
      security:
        - HTTPBearer: []


  /delete_reference:
    post:
      summary: Delete Reference
      description: Deletes a reference between two documents.
      operationId: delete_reference_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteReferenceRequest"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteReferenceResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
      security:
        - HTTPBearer: []

components:
  schemas:
    Document:
      title: Document
      required:
        - text
      type: object
      properties:
        id:
          title: Id
          type: string
        text:
          title: Text
          type: string
        metadata:
          $ref: "#/components/schemas/DocumentMetadata"
    DocumentMetadata:
      title: DocumentMetadata
      type: object
      properties:
        title:
          title: Title
          type: string
        type:
          title: Document Type
          type: string
        source:
          title: Source
          type: string
        created_at:
          title: Created At
          type: string
        status:
          title: Status
          type: string
    DocumentReference:
      title: DocumentReference
      type: object
      properties:
        document_id:
          title: DocumentId
          type: string
        title:
          title: Title
          type: string
        relationship:
          title: Relationship
          type: string
    DocumentRelationship:
      title: DocumentRelationship
      type: object
      properties:
        from_documents:
          title: FromDocuments
          type: array
          items:
            $ref: "#/components/schemas/DocumentReference"
        to_documents:
          title: ToDocuments
          type: array
          items:
            $ref: "#/components/schemas/DocumentReference"
    DocumentMetadataFilter:
      title: DocumentMetadataFilter
      type: object
      properties:
        document_id:
          title: Document Id
          type: string
        title:
          title: Title
          type: string
        type:
          title: Artifact Type
          type: string
        source:
          title: Source
          type: string
        created_at:
          title: Created At
          type: string
        status:
          title: Status
          type: string
        start_date:
          title: Start Date
          type: string
        end_date:
          title: End Date
          type: string          
    DocumentChunkMetadata:
      title: DocumentChunkMetadata
      type: object
      properties:
        document_id:
          title: Document Id
          type: string
        index:
          title: index
          type: number
        title:
          title: Title
          type: string      
        type:
          title: Type of document
          type: string
        source:
          title: Source
          type: string
        created_at:
          title: Created At
          type: string
        status:
          title: Status
          type: string
    DocumentChunk:
      title: DocumentChunk
      required:
        - text
        - metadata
      type: object
      properties:
        id:
          title: Id
          type: string
        text:
          title: Text
          type: string
        metadata:
          $ref: "#/components/schemas/DocumentChunkMetadata"
        relationships:
          $ref: "#/components/schemas/DocumentRelationship"
        embedding:
          title: Embedding
          type: array
          items:
            type: number
    DocumentChunkWithScore:
      title: DocumentChunkWithScore
      required:
        - text
        - metadata
        - score
      type: object
      properties:
        id:
          title: Id
          type: string
        text:
          title: Text
          type: string
        metadata:
          $ref: "#/components/schemas/DocumentChunkMetadata"
        relationships:
          $ref: "#/components/schemas/DocumentRelationship"
        embedding:
          title: Embedding
          type: array
          items:
            type: number
        score:
          title: Score
          type: number
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: "#/components/schemas/ValidationError"
    Query:
      title: Query
      required:
        - query
      type: object
      properties:
        query:
          title: Query
          type: string
        filter:
          $ref: "#/components/schemas/DocumentMetadataFilter"
        top_k:
          title: Top K
          type: integer
          default: 3
    QueryRequest:
      title: QueryRequest
      required:
        - queries
      type: object
      properties:
        queries:
          title: Queries
          type: array
          items:
            $ref: "#/components/schemas/Query"
    QueryResponse:
      title: QueryResponse
      required:
        - results
      type: object
      properties:
        results:
          title: Results
          type: array
          items:
            $ref: "#/components/schemas/QueryResult"
    QueryResult:
      title: QueryResult
      required:
        - query
        - results
      type: object
      properties:
        query:
          title: Query
          type: string
        results:
          title: Results
          type: array
          items:
            $ref: "#/components/schemas/DocumentChunkWithScore"
    UpsertRequest:
      title: UpsertRequest
      required:
        - documents
      type: object
      properties:
        documents:
          title: Documents
          type: array
          items:
            $ref: "#/components/schemas/Document"      
    UpsertResponse:
      title: UpsertResponse
      required:
        - ids
      type: object
      properties:
        ids:
          title: Ids
          type: array
          items:
            type: string
    DeleteRequest:
      title: DeleteRequest
      type: object
      properties:
        ids:
          title: Ids
          type: array
          items:
            type: string
        filter:
          $ref: "#/components/schemas/DocumentMetadataFilter"
        delete_all:
          title: Delete All
          type: boolean
    DeleteResponse:
      title: DeleteResponse
      type: object
      properties:
        success:
          title: Success
          type: boolean
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    AddReferenceRequest:
      title: AddReferenceRequest
      required:
        - from_id
        - to_id
        - from_relationship_type
        - to_relationship_type
      type: object
      properties:
        from_id:
          title: From ID
          type: string
        to_id:
          title: To ID
          type: string
        from_relationship_type:
          title: From Relationship Type
          type: string
        to_relationship_type:
          title: To Relationship Type
          type: string
    AddReferenceResponse:
      title: AddReferenceResponse
      required:
        - success
      type: object
      properties:
        success:
          title: Success
          type: boolean
    DeleteReferenceRequest:
      title: DeleteReferenceRequest      
      required:
        - from_id
        - to_id
      type: object
      properties:
        from_id:
          title: From ID
          type: string
        to_id:
          title: To ID
          type: string
    DeleteReferenceResponse:
      title: DeleteReferenceResponse
      required:
        - success
      type: object
      properties:
        success:
          title: Success
          type: boolean
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
