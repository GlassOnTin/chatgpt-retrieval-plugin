openapi: 3.0.2
info:
  title: Retrieval Plugin API
  description: >-
    A retrieval API for querying and filtering documents based on natural
    language queries and metadata
  version: 1.0.0
servers:
  - url: https://retrieval-plugin-server-se2t.onrender.com/sub
paths:
  /upsert:
    post:
      summary: Upsert
      description: >-
        Save chat information. Accepts an array of documents with text and
        metadata (no ID required as this will be generated).
      operationId: upsert_upsert_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /query:
    post:
      summary: Query
      description: >-
        Accepts search query objects array each with query and optional filter.
        Break down complex questions into sub-questions. Refine results by
        criteria, e.g. time, don't do this often. Split queries if
        ResponseTooLargeError occurs.
      operationId: query_query_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
components:
  schemas:
    Document:
      title: Document
      type: object
      properties:
        id:
          title: Id
          type: string
        text:
          title: Text
          type: string
        metadata:
          $ref: '#/components/schemas/DocumentMetadata'
    DocumentChunkMetadata:
      title: DocumentChunkMetadata
      type: object
      properties:
        title:
          title: Title
          type: string
        type:
          title: Type
          type: string
        source:
          title: Source
          type: string
        created_at:
          title: Created At
          type: string
        status:
          title: Status
          type: string
        document_id:
          title: Document Id
          type: string
        index:
          title: Index
          type: integer
          default: 0
    DocumentChunkMetadataFilter:
      title: DocumentChunkMetadataFilter
      type: object
      properties:
        title:
          title: Title
          type: string
        type:
          title: Type
          type: string
        source:
          title: Source
          type: string
        created_at:
          title: Created At
          type: string
        status:
          title: Status
          type: string
        document_id:
          title: Document Id
          type: string
        index:
          title: Index
          type: integer
          default: 0
        start_date:
          title: Start Date
          type: string
        end_date:
          title: End Date
          type: string
    DocumentChunkWithScore:
      title: DocumentChunkWithScore
      required:
        - text
        - metadata
        - score
      type: object
      properties:
        text:
          title: Text
          type: string
        metadata:
          $ref: '#/components/schemas/DocumentChunkMetadata'
        relationships:
          $ref: '#/components/schemas/DocumentRelationship'
        embedding:
          title: Embedding
          type: array
          items:
            type: number
        score:
          title: Score
          type: number
    DocumentMetadata:
      title: DocumentMetadata
      type: object
      properties:
        title:
          title: Title
          type: string
        type:
          title: Type
          type: string
        source:
          title: Source
          type: string
        created_at:
          title: Created At
          type: string
        status:
          title: Status
          type: string
    DocumentReference:
      title: DocumentReference
      type: object
      properties:
        document_id:
          title: Document Id
          type: string
        title:
          title: Title
          type: string
        relationship:
          title: Relationship
          type: string
    DocumentRelationship:
      title: DocumentRelationship
      type: object
      properties:
        from_documents:
          title: From Documents
          type: array
          items:
            $ref: '#/components/schemas/DocumentReference'
          default: []
        to_documents:
          title: To Documents
          type: array
          items:
            $ref: '#/components/schemas/DocumentReference'
          default: []
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    Query:
      title: Query
      required:
        - query
      type: object
      properties:
        query:
          title: Query
          type: string
        filter:
          $ref: '#/components/schemas/DocumentChunkMetadataFilter'
        top_k:
          title: Top K
          type: integer
          default: 3
    QueryRequest:
      title: QueryRequest
      required:
        - queries
      type: object
      properties:
        queries:
          title: Queries
          type: array
          items:
            $ref: '#/components/schemas/Query'
    QueryResponse:
      title: QueryResponse
      required:
        - results
      type: object
      properties:
        results:
          title: Results
          type: array
          items:
            $ref: '#/components/schemas/QueryResult'
    QueryResult:
      title: QueryResult
      required:
        - query
      type: object
      properties:
        query:
          title: Query
          type: string
        results:
          title: Results
          type: array
          items:
            $ref: '#/components/schemas/DocumentChunkWithScore'
          default: []
    UpsertRequest:
      title: UpsertRequest
      required:
        - documents
      type: object
      properties:
        documents:
          title: Documents
          type: array
          items:
            $ref: '#/components/schemas/Document'
    UpsertResponse:
      title: UpsertResponse
      required:
        - ids
      type: object
      properties:
        ids:
          title: Ids
          type: array
          items:
            type: string
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
